name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual workflow execution

jobs:
  build_and_package:
    name: Build and Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: pnpm-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install

      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: ./dist
          key: build-${{ runner.os }}-${{ github.sha }}
          restore-keys: build-${{ runner.os }}-

      - name: Build project
        run: pnpm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: ./dist

  deploy_to_render:
    name: Deploy to Render
    needs: build_and_package
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: production-files
          path: ./dist

      - name: Trigger Render Deployment
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
               -H "Accept: application/json" \
               -H "Authorization: Bearer $RENDER_API_KEY"

  notify_discord:
    name: Notify Discord
    needs: deploy_to_render
    runs-on: ubuntu-latest
    env:
      BOT_SERVER_URL: "https://discord-notify-bot-jw61.onrender.com/send"
      REPO_LINK: "https://github.com/${{ github.repository }}"
      GITHUB_ACTOR: ${{ github.actor }}
      COMMIT_HASH: ${{ github.sha }}
      COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
      DEPLOY_TIME: ${{ github.event.head_commit.timestamp }}

    steps:
      - name: Send Deployment Notification
        run: |
          STATUS="success"
          MESSAGE="✅ Deployment successful!"
          
          if [ "${{ job.status }}" != "success" ]; then
            STATUS="fail"
            MESSAGE="❌ Deployment failed!"
          fi

          curl -X POST "$BOT_SERVER_URL" \
               -H "Content-Type: application/json" \
               -d "{\"status\": \"$STATUS\", \"message\": \"$MESSAGE\", \"repository\": \"$REPO_LINK\", \"triggered_by\": \"$GITHUB_ACTOR\", \"commit_hash\": \"$COMMIT_HASH\", \"change_log\": \"$COMMIT_MESSAGE\", \"time\": \"$DEPLOY_TIME\"}"